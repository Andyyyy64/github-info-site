{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      Names: null,\n      inputname: \"\",\n      Followers: \"\",\n      Following: \"\",\n      repos: \"\",\n      infoFlg: \"\",\n      message: \"\"\n    };\n  },\n\n  methods: {\n    async getgitinfo() {\n      const image = document.getElementById('image');\n      const url = `https://api.github.com/users/${this.inputname}`;\n      await axios.get(url).then(Response => {\n        this.message = \"Loading...\";\n        this.Names = Response.data;\n        this.Followers = Response.data.followers;\n        this.Following = Response.data.following;\n        image.src = this.Names[\"avatar_url\"];\n        axios.get(`https://api.github.com/users/${this.inputname}/repos`).then(Response => {\n          this.repos = Response.data;\n          const reposName = this.repos.map((_, index) => {\n            return {\n              repo: Response.data[index].name\n            };\n          });\n          this.repos = reposName;\n        });\n      }).catch(err => {\n        alert(\"ユーザーは存在しません\", err.statusText);\n      }).finally(() => {\n        this.infoFlg = true;\n        this.message = \"\";\n      });\n    }\n\n  },\n  mounted: () => {\n    this.getgitinfo();\n  },\n  watch: {\n    inutname: function (newKW, oldKW) {}\n  }\n};","map":{"version":3,"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,IADF;MAELC,SAAS,EAAE,EAFN;MAGLC,SAAS,EAAE,EAHN;MAILC,SAAS,EAAE,EAJN;MAKLC,KAAK,EAAE,EALF;MAMLC,OAAO,EAAE,EANJ;MAOLC,OAAO,EAAE;IAPJ,CAAP;EASD,CAXY;;EAYbC,OAAO,EAAE;IACP,MAAMC,UAAN,GAAmB;MAGjB,MAAMC,KAAI,GAAIC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;MACA,MAAMC,GAAE,GAAK,gCAA+B,KAAKX,SAAU,EAA3D;MACA,MAAMH,KAAK,CAACe,GAAN,CAAUD,GAAV,EACHE,IADG,CACEC,QAAO,IAAK;QAChB,KAAKT,OAAL,GAAe,YAAf;QACA,KAAKN,KAAL,GAAae,QAAQ,CAAChB,IAAtB;QACA,KAAKG,SAAL,GAAiBa,QAAQ,CAAChB,IAAT,CAAciB,SAA/B;QACA,KAAKb,SAAL,GAAiBY,QAAQ,CAAChB,IAAT,CAAckB,SAA/B;QACAR,KAAK,CAACS,GAAN,GAAY,KAAKlB,KAAL,CAAW,YAAX,CAAZ;QACAF,KAAK,CAACe,GAAN,CAAW,gCAA+B,KAAKZ,SAAU,QAAzD,EACGa,IADH,CACQC,QAAO,IAAK;UAChB,KAAKX,KAAL,GAAaW,QAAQ,CAAChB,IAAtB;UACA,MAAMoB,SAAQ,GAAI,KAAKf,KAAL,CAAWgB,GAAX,CAAe,CAACC,CAAD,EAAIC,KAAJ,KAAc;YAC7C,OAAO;cACLC,IAAI,EAAER,QAAQ,CAAChB,IAAT,CAAcuB,KAAd,EAAqBE;YADtB,CAAP;UAGD,CAJiB,CAAlB;UAKA,KAAKpB,KAAL,GAAae,SAAb;QACD,CATH;MAUD,CAjBG,EAkBHM,KAlBG,CAkBGC,GAAE,IAAK;QACZC,KAAK,CAAC,aAAD,EAAgBD,GAAG,CAACE,UAApB,CAAL;MACD,CApBG,EAqBHC,OArBG,CAqBK,MAAM;QACb,KAAKxB,OAAL,GAAe,IAAf;QACA,KAAKC,OAAL,GAAe,EAAf;MACD,CAxBG,CAAN;IAyBD;;EA/BM,CAZI;EA6CbwB,OAAO,EAAE,MAAM;IACb,KAAKtB,UAAL;EACD,CA/CY;EAgDbuB,KAAK,EAAE;IACLC,QAAQ,EAAE,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB,CAElC;EAHK;AAhDM,CAAf","names":["axios","data","Names","inputname","Followers","Following","repos","infoFlg","message","methods","getgitinfo","image","document","getElementById","url","get","then","Response","followers","following","src","reposName","map","_","index","repo","name","catch","err","alert","statusText","finally","mounted","watch","inutname","newKW","oldKW"],"sourceRoot":"","sources":["/home/andy64/PROJECT/github-info-site/src/App.vue"],"sourcesContent":["<script>\nimport axios from \"axios\"\nexport default {\n  data() {\n    return {\n      Names: null,\n      inputname: \"\",\n      Followers: \"\",\n      Following: \"\",\n      repos: \"\",\n      infoFlg: \"\",\n      message: \"\"\n    }\n  },\n  methods: {\n    async getgitinfo() {\n\n\n      const image = document.getElementById('image')\n      const url = `https://api.github.com/users/${this.inputname}`\n      await axios.get(url)\n        .then(Response => {\n          this.message = \"Loading...\"\n          this.Names = Response.data\n          this.Followers = Response.data.followers\n          this.Following = Response.data.following\n          image.src = this.Names[\"avatar_url\"]\n          axios.get(`https://api.github.com/users/${this.inputname}/repos`)\n            .then(Response => {\n              this.repos = Response.data\n              const reposName = this.repos.map((_, index) => {\n                return {\n                  repo: Response.data[index].name\n                }\n              })\n              this.repos = reposName\n            })\n        })\n        .catch(err => {\n          alert(\"ユーザーは存在しません\", err.statusText)\n        })\n        .finally(() => {\n          this.infoFlg = true\n          this.message = \"\"\n        })\n    },\n  },\n  mounted: () => {\n    this.getgitinfo();\n  },\n  watch: {\n    inutname: function (newKW, oldKW) {\n\n    }\n  }\n}\n\n</script>\n\n<template>\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\">\n  <div class=\"contaier\">\n    <header>\n      <h1 class=\"maintitle mb-10\">Github Infomation Site</h1>\n      <span class=\"fa fa-github fa-3x\"></span>\n    </header>\n    <main>\n      <div class=\"NameInfo\">\n        <input type=\"text\" id=\"gitnameinfo\" class=\"typename\" v-model=\"inputname\" placeholder=\"Please enter a name\">\n        <button class=\"searchinfo\" @click=\"getgitinfo\">Search</button>\n      </div>\n    </main>\n    <div class=\"loading\">{{ message }}</div>\n    <div class=\"contents\">\n      <img v-if=\"infoFlg\" class=\"infoimg\" id=\"image\" src=\"image.src\">\n      <div v-if=\"infoFlg\" class=\"userinfo\">\n        <h2>{{ this.inputname }}</h2>\n        <ul>\n          <li>{{ this.Followers }} followers</li>\n          <li>{{ this.Following }} following</li>\n        </ul>\n        <h3>repos</h3>\n        <ul class=\"repositori\" v-for=\"(reponame, index) in repos\" :key=\"index\">\n          {{ reponame.repo }}\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style>\n* {\n  margin: 0 auto;\n  font-family: \"courier\", \"Roboto Mono\", \"Vazirmatn\";\n  font-weight: bold;\n}\n\n.maintitle {\n  text-align: center;\n  letter-spacing: -0.5px;\n  position: relative;\n  top: 9px;\n}\n\nheader {\n  background-color: #16e0d9;\n  color: #fff;\n  height: 55px;\n}\n\nmain {\n  background-color: #1f938f;\n  height: 90px;\n  border-bottom: 3px solid black;\n}\n\n.loading {\n  background-color: #156766;\n  text-align: center;\n  font-size: 50px;\n  padding-top: 50px;\n}\n\n.contents {\n  background-color: #156766;\n  height: 800px;\n\n}\n\n.NameInfo {\n  display: inline-block;\n  margin-left: 460px;\n  margin-top: 20px;\n}\n\n.typename {\n  font-size: 1.5em;\n  margin-right: 20px;\n}\n\n.searchinfo {\n  font-size: 1.2em;\n  position: relative;\n  bottom: 2px;\n  cursor: pointer;\n}\n\n.mt-10 {\n  margin-top: 10px;\n}\n\n.mb-10 {\n  margin-bottom: 10px;\n}\n\n.fa {\n  text-align: left;\n  position: relative;\n  bottom: 48px;\n  left: 5px;\n}\n\n.infoimg {\n  width: 300px;\n  position: relative;\n  left: 100px;\n  top: 30px;\n  border: 2px solid rgb(56, 11, 11);\n}\n\nh2 {\n  text-align: center;\n  position: relative;\n  bottom: 250px;\n  color: #e4efef;\n  font-size: 40px;\n  margin-bottom: 10px;\n}\n\nul {\n  position: relative;\n  text-align: center;\n  bottom: 250px;\n  list-style: none;\n  margin-right: 40px;\n}\n\nh3 {\n  text-align: center;\n  position: relative;\n  bottom: 225px;\n  color: #e4efef;\n  font-size: 40px;\n  margin-bottom: 10px;\n}\n\n.repositori {\n  position: relative;\n  text-align: center;\n  bottom: 225px;\n  list-style: none;\n  margin-right: 40px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}